{"ts":1370946133468,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1370946418753,"patch":[[{"diffs":[[1,"$(function() {\n   var board = new Array();\n});"]],"start1":0,"start2":0,"length1":0,"length2":46}]],"length":46,"saved":false}
{"ts":1370946487461,"patch":[[{"diffs":[[1,"function getBoardSize() {\n    return { x: 10, y: 10 };   \n}\n\n"],[0,"$(functi"]],"start1":0,"start2":0,"length1":8,"length2":69}]],"length":107,"saved":false}
{"ts":1370946511618,"patch":[[{"diffs":[[0,";   \n}\n\n"],[1,"function getTileSize() {\n    return { x: 20, y: 20 };\n}\n\n"],[0,"$(functi"]],"start1":53,"start2":53,"length1":16,"length2":73}]],"length":164,"saved":false}
{"ts":1370946528474,"patch":[[{"diffs":[[0,"0 };\n}\n\n"],[1,"function createBoard() {\n    \n}\n\n"],[0,"$(functi"]],"start1":110,"start2":110,"length1":16,"length2":49}]],"length":197,"saved":false}
{"ts":1370946636635,"patch":[[{"diffs":[[1,"function Board() {\n   this.board = new Array();\n}\n\n"],[0,"function getBoardSiz"]],"start1":0,"start2":0,"length1":20,"length2":71},{"diffs":[[0,"    "],[-1,"\n}\n\n$(function() {\n   "],[0,"var "]],"start1":194,"start2":194,"length1":30,"length2":8},{"diffs":[[0,"rray();\n"],[1,"}\n\n$(function() {\n   \n"],[0,"});"]],"start1":215,"start2":215,"length1":11,"length2":33}]],"length":248,"saved":false}
{"ts":1370946666576,"patch":[[{"diffs":[[-1,"function"],[1,"var"],[0," Board"],[-1,"()"],[1," ="],[0," {\n "]],"start1":0,"start2":0,"length1":20,"length2":15},{"diffs":[[0,"  this.board"],[-1," ="],[1,":"],[0," new Array()"]],"start1":15,"start2":15,"length1":26,"length2":25},{"diffs":[[0," new Array()"],[-1,";"],[0,"\n}\n\nfunction"]],"start1":28,"start2":28,"length1":25,"length2":24}]],"length":241,"saved":false}
{"ts":1370946668438,"patch":[[{"diffs":[[0,"rray()\n}"],[1,";"],[0,"\n\nfuncti"]],"start1":34,"start2":34,"length1":16,"length2":17}]],"length":242,"saved":false}
{"ts":1370946673821,"patch":[[{"diffs":[[0,"\n   "],[-1,"this."],[0,"boar"]],"start1":13,"start2":13,"length1":13,"length2":8}]],"length":237,"saved":false}
{"ts":1370946782432,"patch":[[{"diffs":[[-1,"var"],[1,"function"],[0," Board"],[-1," ="],[1,"()"],[0," {\n   "],[1,"this."],[0,"board"],[-1,":"],[1," ="],[0," new"]],"start1":0,"start2":0,"length1":27,"length2":38},{"diffs":[[0,"ay()"],[1,";"],[0,"\n}"],[-1,";"],[1,"\n\nBoard.prototype.create(size, mines) {\n    if(mines >= (size.x *size.y)) {\n        alert(\"Too many mines: \" + mines);\n    }\n}"],[0,"\n\nfu"]],"start1":42,"start2":42,"length1":11,"length2":137}]],"length":374,"saved":false}
{"ts":1370946797792,"patch":[[{"diffs":[[0,"s);\n    "],[-1,"}"],[1,"    return;\n    }\n    \n    "],[0,"\n}\n\nfunc"]],"start1":164,"start2":164,"length1":17,"length2":43}]],"length":400,"saved":false}
{"ts":1370946804503,"patch":[[{"diffs":[[0,"    "],[-1,"alert"],[1,"console.log"],[0,"(\"To"]],"start1":129,"start2":129,"length1":13,"length2":19}]],"length":406,"saved":false}
{"ts":1370946825315,"patch":[[{"diffs":[[0,".create("],[1,"div, "],[0,"size, mi"]],"start1":66,"start2":66,"length1":16,"length2":21}]],"length":411,"saved":false}
{"ts":1370946829420,"patch":[[{"diffs":[[0,"ate("],[-1,"div, "],[0,"size"]],"start1":70,"start2":70,"length1":13,"length2":8}]],"length":406,"saved":false}
{"ts":1370946845680,"patch":[[{"diffs":[[0,"   \n    \n}\n\n"],[1,"Board.prototype.buildHTML(div) {\n    \n}\n"],[0,"function get"]],"start1":197,"start2":197,"length1":24,"length2":64}]],"length":446,"saved":false}
{"ts":1370946889751,"patch":[[{"diffs":[[0,"   \n    "],[1,"for(var i = 0; i < size.x; i++) {\n        \n    }"],[0,"\n}\n\nBoar"]],"start1":197,"start2":197,"length1":16,"length2":64}]],"length":494,"saved":false}
{"ts":1370946910846,"patch":[[{"diffs":[[0,") {\n        "],[1,"this.board.append(new Array());"],[0,"\n    }\n}\n\nBo"]],"start1":235,"start2":235,"length1":24,"length2":55}]],"length":525,"saved":false}
{"ts":1370946928331,"patch":[[{"diffs":[[0,"\n    }\n}"],[1,";"],[0,"\n\nBoard."]],"start1":278,"start2":278,"length1":16,"length2":17}]],"length":526,"saved":false}
{"ts":1370946935170,"patch":[[{"diffs":[[0,"e.create"],[1," = function"],[0,"(size, m"]],"start1":65,"start2":65,"length1":16,"length2":27}]],"length":537,"saved":false}
{"ts":1370946937564,"patch":[[{"diffs":[[0,"\n    }\n}"],[-1,";"],[0,"\n\nBoard."]],"start1":289,"start2":289,"length1":17,"length2":16}]],"length":536,"saved":false}
{"ts":1370946957765,"patch":[[{"diffs":[[0,"oard"],[-1,".append("],[1,"[i] = "],[0,"new "]],"start1":264,"start2":264,"length1":16,"length2":14},{"diffs":[[0," Array()"],[-1,")"],[0,";\n    }\n"]],"start1":277,"start2":277,"length1":17,"length2":16}]],"length":533,"saved":false}
{"ts":1370946983153,"patch":[[{"diffs":[[0,"oard"],[-1,"[i] = "],[1,".append("],[0,"new "]],"start1":264,"start2":264,"length1":14,"length2":16},{"diffs":[[0," Array()"],[1,")"],[0,";\n    }\n"]],"start1":279,"start2":279,"length1":16,"length2":17}]],"length":536,"saved":false}
{"ts":1370947013668,"patch":[[{"diffs":[[0,"ray());\n"],[1,"        \n        for(var j = 0; j < size.y; j++) {\n            this.board[i].append(new Tile(\"empty\"));\n        }\n"],[0,"    }\n}\n"]],"start1":282,"start2":282,"length1":16,"length2":130}]],"length":650,"saved":false}
{"ts":1370947068026,"patch":[[{"diffs":[[0,"\n    \n}\n"],[1,"\nfunction Tile(type) {\n    this.type = type; \n}\n\n"],[0,"function"]],"start1":445,"start2":445,"length1":16,"length2":65}]],"length":699,"saved":false}
{"ts":1370947159725,"patch":[[{"diffs":[[0,") {\n    "],[1,"$(\"<button>\").button().click() {\n        \n    }"],[0,"\n}\n\nfunc"]],"start1":442,"start2":442,"length1":16,"length2":63}]],"length":746,"saved":false}
{"ts":1370947222374,"patch":[[{"diffs":[[0,"e, mines) {\n"],[1,"    this.size = size;\n    t\n"],[0,"    if(mines"]],"start1":88,"start2":88,"length1":24,"length2":52}]],"length":774,"saved":false}
{"ts":1370947226250,"patch":[[{"diffs":[[0,"e;\n    t"],[1,"his.mines = mines;\n    "],[0,"\n    if("]],"start1":119,"start2":119,"length1":16,"length2":39}]],"length":797,"saved":false}
{"ts":1370947309271,"patch":[[{"diffs":[[1,"var tableName = \"joasveiper_table\";\n\n"],[0,"function Board()"]],"start1":0,"start2":0,"length1":16,"length2":53},{"diffs":[[0,"    "],[-1,"$(\"<button>\").button().click("],[1,"\n    $(\"<table id='joasveiper_table'>\""],[0,") {\n"]],"start1":534,"start2":534,"length1":37,"length2":46}]],"length":843,"saved":false}
{"ts":1370947363087,"patch":[[{"diffs":[[0,"id='"],[-1,"joasveiper_table'>"],[1,"\" + tableName + \"'"],[0,"\") {"]],"start1":553,"start2":553,"length1":26,"length2":26}]],"length":843,"saved":false}
{"ts":1370947422915,"patch":[[{"diffs":[[0,"div) {\n    \n"],[1,"    var self = this;\n    \n"],[0,"    $(\"<tabl"]],"start1":527,"start2":527,"length1":24,"length2":50},{"diffs":[[0,") {\n        "],[1,"for(var i = 0; i < self.size.x; i++) {\n            \n        }"],[0,"\n    }\n}\n\nfu"]],"start1":602,"start2":602,"length1":24,"length2":85}]],"length":930,"saved":false}
{"ts":1370947460974,"patch":[[{"diffs":[[0,"e + \"'\")"],[1,".create(function()"],[0," {\n     "]],"start1":595,"start2":595,"length1":16,"length2":34},{"diffs":[[0,") {\n            "],[1,"$(\"\")"],[0,"\n        }\n    }"]],"start1":667,"start2":667,"length1":32,"length2":37},{"diffs":[[0,"     }\n    }"],[1,");"],[0,"\n}\n\nfunction"]],"start1":692,"start2":692,"length1":24,"length2":26}]],"length":955,"saved":false}
{"ts":1370947710710,"patch":[[{"diffs":[[0,"   \n    "],[-1,"$("],[1,"var content = "],[0,"\"<table "]],"start1":561,"start2":561,"length1":18,"length2":30},{"diffs":[[0,"+ \"'"],[-1,"\").create(function() {"],[1,">\";"],[0,"\n    "],[1,"\n"],[0,"    "]],"start1":609,"start2":609,"length1":35,"length2":17},{"diffs":[[0,"    "],[-1,"    $(\"\")\n        }"],[1,"var content += \"<tr id='row\" + i + \"'>\";"],[0,"\n    }"],[-1,");"],[0,"\n}\n\n"]],"start1":669,"start2":669,"length1":35,"length2":54}]],"length":968,"saved":false}
{"ts":1370947727591,"patch":[[{"diffs":[[0,") {\n        "],[-1,"var "],[0,"content += \""]],"start1":661,"start2":661,"length1":28,"length2":24},{"diffs":[[0,"+ i + \"'>\";\n"],[1,"        \n        for(var j = 0; j < self.size.y; j++) {\n            \n        }\n"],[0,"    }\n}\n\nfun"]],"start1":698,"start2":698,"length1":24,"length2":103}]],"length":1043,"saved":false}
{"ts":1370947733927,"patch":[[{"diffs":[[0," = type;"],[-1," "],[0,"\n}\n\nfunc"]],"start1":833,"start2":833,"length1":17,"length2":16}]],"length":1042,"saved":false}
{"ts":1370948527536,"patch":[[{"diffs":[[0,"\n   "],[-1,"this.board = new Array();"],[1,"\n   var self = this;\n   \n   this.board = ko.observable"],[0,"\n}\n\n"]],"start1":55,"start2":55,"length1":33,"length2":62},{"diffs":[[0,") {\n            "],[1,"content += \"<td><button onclick='board.click"],[0,"\n        }\n    }"]],"start1":791,"start2":791,"length1":32,"length2":76}]],"length":1115,"saved":false}
{"ts":1370948532005,"patch":[[{"diffs":[[0,"servable"],[1,"Array();"],[0,"\n}\n\nBoar"]],"start1":105,"start2":105,"length1":16,"length2":24}]],"length":1123,"saved":false}
{"ts":1370948544949,"patch":[[{"diffs":[[0,"s.board."],[-1,"append"],[1,"push"],[0,"(new Arr"]],"start1":386,"start2":386,"length1":22,"length2":20},{"diffs":[[0,"[i]."],[-1,"append"],[1,"push"],[0,"(new"]],"start1":486,"start2":486,"length1":14,"length2":12}]],"length":1119,"saved":false}
{"ts":1370948556741,"patch":[[{"diffs":[[0,"rd.push("],[-1,"new "],[1,"ko.observable"],[0,"Array())"]],"start1":391,"start2":391,"length1":20,"length2":29}]],"length":1128,"saved":false}
{"ts":1370949073258,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"Board.prototype.buildHTML(div) {\n    \n    var self = this;\n    \n    var content = \"<table id='\" + tableName + \"'>\";\n    \n    for(var i = 0; i < self.size.x; i++) {\n        content += \"<tr id='row\" + i + \"'>\";\n        \n        for(var j = 0; j < self.size.y; j++) {\n            content += \"<td><button onclick='board.click\n        }\n    }\n}\n\n"],[0,"func"]],"start1":539,"start2":539,"length1":349,"length2":8}]],"length":787,"saved":false}
{"ts":1370949085642,"patch":[[{"diffs":[[0,"();\n"],[-1,"}\n\nBoard.prototype.create = function(size, mines) {\n "],[1,"   \n"],[0,"   t"]],"start1":118,"start2":118,"length1":61,"length2":12},{"diffs":[[0,"}\n    }\n"],[-1,"}"],[1,"    \n}\n\n    \n"],[0,"\n\nfuncti"]],"start1":483,"start2":483,"length1":17,"length2":29}]],"length":750,"saved":false}
{"ts":1370949094133,"patch":[[{"diffs":[[0,"ction Board("],[1,"size, mines"],[0,") {\n   \n   v"]],"start1":40,"start2":40,"length1":24,"length2":35}]],"length":761,"saved":false}
{"ts":1370949101838,"patch":[[{"diffs":[[0,"\n   \n   "],[1," "],[0,"var self"]],"start1":66,"start2":66,"length1":16,"length2":17},{"diffs":[[0,"= this;\n   \n"],[1," "],[0,"   this.boar"]],"start1":84,"start2":84,"length1":24,"length2":25},{"diffs":[[0,"();\n   \n"],[1,"  "],[0,"   this."]],"start1":131,"start2":131,"length1":16,"length2":18}]],"length":765,"saved":false}
{"ts":1370949109072,"patch":[[{"diffs":[[-1,"var tableName = \"joasveiper_table\";\n\n"],[0,"func"]],"start1":0,"start2":0,"length1":41,"length2":4}]],"length":728,"saved":false}
{"ts":1370949120215,"patch":[[{"diffs":[[0,"();\n   \n    "],[-1," "],[0,"this.size = "]],"start1":94,"start2":94,"length1":25,"length2":24}]],"length":727,"saved":false}
{"ts":1370949495165,"patch":[[{"diffs":[[0,"\n   \n});"],[1,"\n\nko.applyBindings(new Board());"]],"start1":719,"start2":719,"length1":8,"length2":40}]],"length":759,"saved":false}
{"ts":1370949511378,"patch":[[{"diffs":[[0,"w Board("],[1,"getBoardSize(), 10"],[0,"));"]],"start1":748,"start2":748,"length1":11,"length2":29}]],"length":777,"saved":false}
{"ts":1370949534689,"patch":[[{"diffs":[[0,";\n}\n"],[-1,"\n$(function() {\n   \n});\n\n"],[0,"ko.a"]],"start1":700,"start2":700,"length1":33,"length2":8}]],"length":752,"saved":false}
{"ts":1370949543302,"patch":[[{"diffs":[[0,"ay();\n}\n"],[1,"\n"],[0,"ko.apply"]],"start1":696,"start2":696,"length1":16,"length2":17}]],"length":753,"saved":false}
{"ts":1370950200018,"patch":[[{"diffs":[[0,"is;\n   \n    "],[-1,"this"],[1,"self"],[0,".board = ko."]],"start1":51,"start2":51,"length1":28,"length2":28},{"diffs":[[0,"   \n    "],[-1,"this"],[1,"self"],[0,".size = "]],"start1":98,"start2":98,"length1":20,"length2":20},{"diffs":[[0,"ze;\n    "],[-1,"this"],[1,"self"],[0,".mines ="]],"start1":120,"start2":120,"length1":20,"length2":20},{"diffs":[[0,") {\n        "],[-1,"this"],[1,"self"],[0,".board.push("]],"start1":299,"start2":299,"length1":28,"length2":28},{"diffs":[[0,"        "],[-1,"this"],[1,"self"],[0,".board[i"]],"start1":405,"start2":405,"length1":20,"length2":20}]],"length":753,"saved":false}
{"ts":1370950296613,"patch":[[{"diffs":[[0,"lf.board"],[1,"("],[0,".push(ko"]],"start1":313,"start2":313,"length1":16,"length2":17},{"diffs":[[0,"lf.board"],[1,"()"],[0,"[i].push"]],"start1":416,"start2":416,"length1":16,"length2":18},{"diffs":[[0,"\n}\n\n"],[-1,"function createBoard() {\n    var board = new Array();\n}\n\n"],[0,"ko.a"]],"start1":647,"start2":647,"length1":65,"length2":8}]],"length":699,"saved":false}
{"ts":1370950299856,"patch":[[{"diffs":[[0,"f.board("],[1,")"],[0,".push(ko"]],"start1":314,"start2":314,"length1":16,"length2":17}]],"length":700,"saved":false}
{"ts":1370951868162,"patch":[[{"diffs":[[0,"ines) {\n"],[-1,"   \n"],[0,"    var "]],"start1":22,"start2":22,"length1":20,"length2":16},{"diffs":[[0,"}\n    }\n"],[-1,"    \n"],[0,"}\n\n    \n"]],"start1":460,"start2":460,"length1":21,"length2":16}]],"length":691,"saved":false}
{"ts":1370952253409,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"    \n\n\n"],[0,"func"]],"start1":467,"start2":467,"length1":15,"length2":8}]],"length":684,"saved":false}
{"ts":1370952263524,"patch":[[{"diffs":[[0,"}\n    }\n"],[1,"    \n    console.log(\"done\");\n"],[0,"}\n\nfunct"]],"start1":460,"start2":460,"length1":16,"length2":46}]],"length":714,"saved":false}
{"ts":1370952270723,"patch":[[{"diffs":[[0,"\n    }\n    \n"],[1,"     console.log(\"start\");\n"],[0,"    for(var "]],"start1":249,"start2":249,"length1":24,"length2":51}]],"length":741,"saved":false}
{"ts":1370953060755,"patch":[[{"diffs":[[0,"e.x; i++) {\n"],[1,"         console.log(\"start \" + i);\n"],[0,"        self"]],"start1":314,"start2":314,"length1":24,"length2":60}]],"length":777,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371799706772,"patch":[[{"diffs":[[1,"var tileState = function() {\n    this.exploded = \"exploded\";\n    this.none = \"none\";\n    this.flagged = \"flagged\";\n    this.clicked = \"clicked\";\n};\n\nvar tileType = function() {\n    this.free = \"free\";\n    this.bomb = \"bomb\";\n};\n\n"],[0,"function Board(s"]],"start1":0,"start2":0,"length1":16,"length2":245},{"diffs":[[0," = this;\n   "],[1," self.boardSize = size;"],[0,"\n    "],[1,"//"],[0,"self.board ="]],"start1":271,"start2":271,"length1":29,"length2":54},{"diffs":[[0,"d = "],[-1,"ko.observableArray();\n   \n    self.size = size"],[1,"[[self.boardSize.y]*self.boardSize.x];\n    self.board = [];\n    \n   \n    self.mines = mines;\n    \n    var i, j;\n    for(i = 0; i < self.boardSize.x; i++) {\n        if(!self.board[i]) self.board[i] = [];\n        for(j = 0; j < self.boardSize.y; j++) {\n            self.board[i][j] = new Tile()"],[0,";\n    "],[1," "],[1,"   }\n    }\n    \n    console.log(\"Empty board created. Inserting \" + "],[0,"self"]],"start1":322,"start2":322,"length1":60,"length2":375},{"diffs":[[0," \" + self.mines "],[-1,"="],[1,"+ \""],[0," mines"],[1,"\")"],[0,";\n    \n    if(mi"]],"start1":688,"start2":688,"length1":39,"length2":43},{"diffs":[[0,"    "],[-1,"if(mines >= (size.x *size.y)"],[1,"var currentMines = 0;\n    \n    while(currentMines < self.mines) {\n        var px = Math.floor(Math.random() * self.boardSize.x);\n        var py = Math.floor(Math.random() * self.boardSize.y);\n        \n        if(!self.board[px][py]"],[0,") {\n"]],"start1":722,"start2":722,"length1":36,"length2":239},{"diffs":[[0,"[py]) {\n        "],[1,"  "],[1,"  "],[0,"console.log(\"Too"]],"start1":953,"start2":953,"length1":32,"length2":36},{"diffs":[[0,"log("],[-1,"\"Too many mines: \" + mines);\n        return"],[1,"currentMines);\n            continue;\n        }\n        \n        if(self.board[px][py].type == tileType.bomb)\n            continue;\n        \n        self.board[px][py].type = tileType.bomb;\n        currentMines++"],[0,";\n  "]],"start1":981,"start2":981,"length1":51,"length2":219},{"diffs":[[0," }\n    \n    "],[-1," "],[0,"console.log("]],"start1":1201,"start2":1201,"length1":25,"length2":24},{"diffs":[[0,"og(\""],[-1,"start\");\n    for(var "],[1,"Mines inserted. Updating mine count\");\n    \n    for("],[0,"i = "]],"start1":1222,"start2":1222,"length1":29,"length2":60},{"diffs":[[0,"i = 0; i < s"],[1,"elf.boardS"],[0,"ize.x; i++) "]],"start1":1278,"start2":1278,"length1":24,"length2":34},{"diffs":[[0,"    "],[-1," console.log(\"start \" + i);\n        self.board().push(ko.observableArray());\n"],[1,"for(j = 0; j < self.boardSize.y; j++) {\n            if(self.board[i][j].type == tileType.free)\n                continue;\n            var tile;\n            try {\n                tile = self.board[i+1][j];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i][j+1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i-1][j];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i][j-1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n    "],[0,"        "],[1,"try {"],[0,"\n   "]],"start1":1318,"start2":1318,"length1":93,"length2":828},{"diffs":[[0,"    "],[-1,"for(var j = 0; j < size.y; j++) {\n            self.board()[i].push(new Tile(\"empty\"));\n        }\n    }\n    \n    console.log(\"done\");\n}\n\nfunction Tile(type) {\n    this.type = type;\n}\n\nfunction getBoardSize() {\n    return { x: 10, y: 10 };   \n}\n\nfunction getTileSize() {\n    return { x: 20, y: 20 };\n}\n\nko.applyBindings(new Board(getBoardSize(), 10));"],[1,"        tile = self.board[i+1][j+1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i-1][j-1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i+1][j-1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i-1][j+1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i][j];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n        }\n    }\n}\n\nfunction Tile() {\n    this.type = tileType.free;\n    this.state = tileState.none;\n    this.minesClose = 1;\n}\n\nTile.prototype.click = function() {\n    switch(this.status) {\n        case \"none\":\n            if(this.type == \"bomb\") {\n                this.status = \"exploded\";\n            }\n    }\n};\n\nfunction getBoardSize() {\n    return { x: 10, y: 10 };   \n}\n\nfunction getTileSize() {\n    return { x: 20, y: 20 };\n}\n\nfunction buildTable(board) {\n    var table = $(\"#sveip_content\");\n    \n    for(var i = 0; i < board.boardSize.x; i++) {\n        var tr = $(\"<tr>\");\n        \n        for(var j = 0; j < board.boardSize.y; j++) {\n            var td = $(\"<td>\");\n            \n            $(\"<button>\").button().click(function() {\n                console.log(i + \" \" + j);\n            }).appendTo(td);\n            \n            $(td).appendTo(tr);\n        }\n        $(tr).appendTo(table);\n    }\n}\n\n$(function() {\n    var board = new Board(getBoardSize(), 10);\n    \n    buildTable(board);\n});\n\n\n\n\n\n\n\n\n\n\n\n"]],"start1":2147,"start2":2147,"length1":353,"length2":1823}]],"length":3970,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371799859031,"patch":[[{"diffs":[[0,"pe.bomb)"],[1," {\n            console.log(\"TileType: \" + self.board[px][py].type);"],[0,"\n       "]],"start1":1085,"start2":1085,"length1":16,"length2":83},{"diffs":[[0,"      continue;\n"],[1,"        }\n"],[0,"        \n       "]],"start1":1167,"start2":1167,"length1":32,"length2":42}]],"length":4047,"saved":false}
{"ts":1371799911433,"patch":[[{"diffs":[[0,"[py].type);\n"],[1,"            wait(10);\n            sleep(10);\n"],[0,"            "]],"start1":1149,"start2":1149,"length1":24,"length2":69}]],"length":4092,"saved":false}
{"ts":1371808642828,"patch":[[{"diffs":[[0,"= \"#"],[-1,"000"],[1,"FFF"],[0,"\";\n "]],"start1":3615,"start2":3615,"length1":11,"length2":11}]],"length":8110,"saved":false}
{"ts":1371808651678,"patch":[[{"diffs":[[0,"': '"],[-1,"white"],[1,"gray"],[0,"',\n "]],"start1":350,"start2":350,"length1":13,"length2":12}]],"length":8109,"saved":false}
{"ts":1371808671836,"patch":[[{"diffs":[[0,"ndTo(td)"],[1,".css('background-color', btnColors.none)"],[0,";\n      "]],"start1":7211,"start2":7211,"length1":16,"length2":56}]],"length":8149,"saved":false}
{"ts":1371808988694,"patch":[[{"diffs":[[0,"ze;\n"],[-1,"    //self.board = [[self.boardSize.y]*self.boardSize.x];\n"],[0,"    "]],"start1":461,"start2":461,"length1":66,"length2":8},{"diffs":[[0,"color = "],[-1,"\"#FFF\""],[1,"btnColors._0"],[0,";\n      "]],"start1":3550,"start2":3550,"length1":22,"length2":28}]],"length":8097,"saved":false}
{"ts":1371812354990,"patch":[[{"diffs":[[0,"Close =="],[-1,"="],[0," 0) {\n  "]],"start1":4689,"start2":4689,"length1":17,"length2":16}]],"length":8096,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372685682226,"patch":[[{"diffs":[[-1,"var tileState = function() {\n    this.exploded = \"exploded\";\n    this.none = \"none\";\n    this.flagged = \"flagged\";\n    this.clicked = \"clicked\";\n};\n\nvar tileType = function() {\n    this.free = \"free\";\n    this.bomb = \"bomb\";\n};\n\nfunction Board(size, mines) {\n    var self = this;\n    self.boardSize = size;\n    self.board = [];\n    \n   \n    self.mines = mines;\n    \n    var i, j;\n    for(i = 0; i < self.boardSize.x; i++) {\n        if(!self.board[i]) self.board[i] = [];\n        for(j = 0; j < self.boardSize.y; j++) {\n            self.board[i][j] = new Tile();\n        }\n    }\n    \n    console.log(\"Empty board created. Inserting \" + self.mines + \" mines\");\n    \n    var currentMines = 0;\n    \n    while(currentMines < self.mines) {\n        var px = Math.floor(Math.random() * self.boardSize.x);\n        var py = Math.floor(Math.random() * self.boardSize.y);\n        \n        if(!self.board[px][py]) {\n            console.log(currentMines);\n            continue;\n        }\n        \n        if(self.board[px][py].type == tileType.bomb) {\n            console.log(\"TileType: \" + self.board[px][py].type);\n            wait(10);\n            sleep(10);\n            continue;\n        }\n        \n        self.board[px][py].type = tileType.bomb;\n        currentMines++;\n    }\n    \n    console.log(\"Mines inserted. Updating mine count\");\n    \n    for(i = 0; i < self.boardSize.x; i++) {\n        for(j = 0; j < self.boardSize.y; j++) {\n            if(self.board[i][j].type == tileType.free)\n                continue;\n            var tile;\n            try {\n                tile = self.board[i+1][j];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i][j+1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i-1][j];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i][j-1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i+1][j+1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i-1][j-1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i+1][j-1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i-1][j+1];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n            try {\n                tile = self.board[i][j];\n                if(tile.minesClose > -1)\n                    tile.minesClose++;\n            }catch(e){}\n        }\n    }\n}\n\nfunction Tile() {\n    this.type = tileType.free;\n    this.state = tileState.none;\n    this.minesClose = 1;\n}\n\nTile.prototype.click = function() {\n    switch(this.status) {\n        case \"none\":\n            if(this.type == \"bomb\") {\n                this.status = \"exploded\";\n            }\n    }\n};\n\nfunction getBoardSize() {\n    return { x: 10, y: 10 };   \n}\n\nfunction getTileSize() {\n    return { x: 20, y: 20 };\n}\n\nfunction buildTable(board) {\n    var table = $(\"#sveip_content\");\n    \n    for(var i = 0; i < board.boardSize.x; i++) {\n        var tr = $(\"<tr>\");\n        \n        for(var j = 0; j < board.boardSize.y; j++) {\n            var td = $(\"<td>\");\n            \n            $(\"<button>\").button().click(function() {\n                console.log(i + \" \" + j);\n            }).appendTo(td).css('background-color', btnColors.none);\n            \n            $(td).appendTo(tr);\n        }\n        $(tr).appendTo(table);\n    }\n}\n\n$(function() {\n    var board = new Board(getBoardSize(), 10);\n    \n    buildTable(board);\n});\n\n\n\n\n\n\n\n\n\n\n\n"],[1,"\n// Globals is nice.\nvar boardSizeCusom;\nvar board;\nvar level;\nvar levelText;\nvar boardSize;\nvar tileSize;\nvar fill = false;\nvar timer;\nvar gameStarted = false;\nvar debug = false;\n\nvar defaultSettings = {\n    tileSize: 20\n}\n\nvar tileState = {\n    \"exploded\": 0,\n    \"none\": 1,\n    \"flagged\": 2,\n    \"clicked\": 3\n};\n\nvar tileType = {\n    \"free\": 0,\n    \"bomb\": 1\n};\n\nvar btnColors = {\n    'flag': '#F0F',\n    'none': '#C0C4AC',\n    'exploded': 'red',\n    \"_0\": \"white\",\n    \"_1\": \"#A7DBD8\",\n    \"_2\": \"#69D2E7\",\n    \"_3\": \"#49B2C7\",\n    \"_4\": \"#87BBB8\",\n    \"_5\": \"#F38630\",\n    \"_6\": \"#C35610\",\n    \"_7\": \"#F38630\",\n    \"_8\": \"#F38630\"\n};\n\n$(function() {\n    determineLevel();\n    createUI();\n    //initGame();\n});\n\n// Stolen from stack-overflow\nfunction getQueryParams(qs) {\n    qs = qs.split(\"+\").join(\" \");\n\n    var params = {}, tokens,\n        re = /[?&]?([^=]+)=([^&]*)/g;\n\n    while (tokens = re.exec(qs)) {\n        params[decodeURIComponent(tokens[1])]\n            = decodeURIComponent(tokens[2]);\n    }\n    return params;\n}\n\nfunction Board(size, mines) {\n    var self = this;\n    self.boardSize = size;\n    self.board = [];\n    self.flags = 0;\n    self.mines = mines;\n    self.clicked = 0;\n    var i, j;\n    \n    \n    this.createBoard = function(x, y) {\n        self.createEmptyBoard();\n        jlog(\"Empty board created. Inserting \" + self.mines + \" mines\");\n        self.insertMines(x, y);\n        jlog(\"Mines inserted. Updating mine count\");\n        self.updatemineCount();\n    };\n    \n    this.createEmptyBoard = function() {\n        for(i = 0; i < self.boardSize.x; i++) {\n            if(!self.board[i]) self.board[i] = [];\n            for(j = 0; j < self.boardSize.y; j++) {\n                self.board[i][j] = new Tile();\n                self.board[i][j].minesClose = 0;\n                self.board[i][j].type = tileType.free;\n                self.board[i][j].state = tileState.none;\n            }\n        }\n    };\n    \n    this.insertMines = function(avoid) {\n        var currentMines = 0;\n        while(currentMines < self.mines) {\n            var px = Math.floor(Math.random() * self.boardSize.x);\n            var py = Math.floor(Math.random() * self.boardSize.y);\n            \n            var cont = false;\n            for(var i = 0; i < avoid.length; i++) {\n                if(px == avoid[i].x && py == avoid[i].y)\n                {\n                    cont = true;\n                    break;\n                }\n            }\n            \n            if(cont)\n                continue;\n            \n            if(self.board[px][py].type == tileType.bomb) {\n                continue;\n            }\n            \n            self.board[px][py].type = tileType.bomb;\n            currentMines++;\n        }\n    };\n    \n    this.addMineTo = function(x, y) {\n        try {\n            var tile = self.board[x][y];\n            if(tile.minesClose > -1)\n                tile.minesClose++;\n        }catch(e){}\n    };\n    \n    this.updatemineCount = function() {\n        for(i = 0; i < self.boardSize.x; i++) {\n            for(j = 0; j < self.boardSize.y; j++) {\n                if(self.board[i][j].type == tileType.free)\n                    continue;\n                \n                var ip1 = parseInt(i) + 1;\n                var jp1 = parseInt(j) + 1;\n                var im1 = parseInt(i) - 1;\n                var jm1 = parseInt(j) - 1;\n                \n                self.addMineTo(ip1, j);\n                self.addMineTo(i, jp1);\n                self.addMineTo(im1, j);\n                self.addMineTo(i, jm1);\n                self.addMineTo(ip1, jp1);\n                self.addMineTo(im1, jm1);\n                self.addMineTo(ip1, jm1);\n                self.addMineTo(im1, jp1);\n            }\n        }\n    };\n    \n    this.flagsSurrounding = function(x, y) {\n        var count = 0;\n        \n        var xp1 = parseInt(x) + 1;\n        var yp1 = parseInt(y) + 1;\n        var xm1 = parseInt(x) - 1;\n        var ym1 = parseInt(y) - 1;\n        \n        if(self.isFlagged(xp1,y)) count++;\n        if(self.isFlagged(x,yp1)) count++;\n        if(self.isFlagged(xm1,y)) count++;\n        if(self.isFlagged(x,ym1)) count++;\n        if(self.isFlagged(xp1,yp1)) count++;\n        if(self.isFlagged(xm1,ym1)) count++;\n        if(self.isFlagged(xp1,ym1)) count++;\n        if(self.isFlagged(xm1,yp1)) count++;\n        \n        return count;\n    };\n    \n    this.clickSurrounding = function(x,y) {\n        // ParseInt fordi den tok x og/eller y som string...\n        // MADDAFAKK\n        var xp1 = parseInt(x) + 1;\n        var yp1 = parseInt(y) + 1;\n        var xm1 = parseInt(x) - 1;\n        var ym1 = parseInt(y) - 1;\n        \n        self.tryClick(xp1,y);\n        self.tryClick(x,yp1);\n        self.tryClick(xm1,y);\n        self.tryClick(x,ym1);\n        self.tryClick(xp1,yp1);\n        self.tryClick(xm1,ym1);\n        self.tryClick(xm1,yp1);\n        self.tryClick(xp1,ym1);\n    };\n    \n    this.clickUnclickedSurrounding = function(x,y) {\n        var xp1 = parseInt(x) + 1;\n        var yp1 = parseInt(y) + 1;\n        var xm1 = parseInt(x) - 1;\n        var ym1 = parseInt(y) - 1;\n        \n        self.tryClickUnclicked(xp1,y);\n        self.tryClickUnclicked(x,yp1);\n        self.tryClickUnclicked(xm1,y);\n        self.tryClickUnclicked(x,ym1);\n        self.tryClickUnclicked(xp1,yp1);\n        self.tryClickUnclicked(xm1,ym1);\n        self.tryClickUnclicked(xm1,yp1);\n        self.tryClickUnclicked(xp1,ym1);\n    };\n    \n    this.unclickedSurroundings = function(x, y) {\n        var count = 0;\n        \n        var xp1 = parseInt(x) + 1;\n        var yp1 = parseInt(y) + 1;\n        var xm1 = parseInt(x) - 1;\n        var ym1 = parseInt(y) - 1;\n        \n        if(self.isUnclicked(xp1,y)) count++;\n        if(self.isUnclicked(x,yp1)) count++;\n        if(self.isUnclicked(xm1,y)) count++;\n        if(self.isUnclicked(x,ym1)) count++;\n        if(self.isUnclicked(xp1,yp1)) count++;\n        if(self.isUnclicked(xm1,ym1)) count++;\n        if(self.isUnclicked(xp1,ym1)) count++;\n        if(self.isUnclicked(xm1,yp1)) count++;\n        \n        return count;\n    };\n    \n    this.isFlagged = function(x,y) {\n        var tile = self.tryGet(x,y);\n        if(!tile) return false;\n        return tile.state == tileState.flagged;\n    };\n    \n    this.isUnclicked = function(x,y) {\n        var tile = self.tryGet(x,y);\n        if(!tile) { \n            jlog(x + \" \" + y + \" is not a tile\");\n            return false;\n        }\n        return tile.state == tileState.none;\n    };\n    \n    this.clickSelected = function(x, y) {\n        self.click(self.selected.x, self.selected.y, self.getButton(self.selected.x, self.seleted.y));\n    };\n    \n    this.flagSelected = function(x, y) {\n        self.flag(self.selected.x, self.selected.y, self.getButton(self.selected.x, self.seleted.y));\n    };\n    \n    this.getButton = function(x, y) {\n        return self.board[x][y].btn;  \n    };\n    \n    this.navigate = function(x, y) {\n        x = (self.selected.x + x) % boardSize.x;\n        y = (self.selected.y + y) % boardSize.y;\n        \n        self.select(x, y);\n    };\n    \n    self.selected = { x: 0, y: 0};\n    \n    this.select = function(x, y) {\n        $(self.getButton(self.selected.x, self.selected.y)).mouseleave();\n        self.selected = { x: x, y: y};  \n        $(self.getButton(x, y)).mouseenter();\n    };\n    \n    this.firstClick = function(x, y, btn) {\n        x = parseInt(x);\n        y = parseInt(y);\n        \n        var avoid = new Array(\n            {x: x, y: y},\n            {x: x+1, y: y},\n            {x: x, y: y+1},\n            {x: x-1, y: y},\n            {x: x, y: y-1},\n            {x: x-1, y: y-1},\n            {x: x+1, y: y+1},\n            {x: x-1, y: y+1},\n            {x: x+1, y: y-1}\n        );\n        self.insertMines(avoid);\n        self.updatemineCount();\n        \n        self.click = self.defaultClick;\n        self.click(x, y, btn);\n    };\n    \n    this.defaultClick = function(x, y, btn) {\n        var tile = self.board[x][y];\n        \n        switch(tile.state) {\n            case tileState.clicked:\n                if(tile.minesClose === 0)\n                    return;\n                // Åpne alle rundt dersom det er nok flagg.\n                var surr = self.flagsSurrounding(x, y);\n                var unclickedSurr = self.unclickedSurroundings(x,y)\n                jlog(\"UM: \" + unclickedSurr + \" \" + tile.minesClose);\n                if(surr == tile.minesClose && unclickedSurr > 0) {\n                    jlog(\"Mines Close: \" + tile.minesClose);\n                    self.clickUnclickedSurrounding(x, y);\n                }\n                return;\n            case tileState.none:\n                if(tile.type == tileType.bomb) {\n                    self.triggerAllMines();\n                    self.onGameOver();\n                }else {\n                    tile.state = tileState.clicked;\n                    $(btn).css('disabled', true);\n                    $(btn).text(tile.minesClose===0?\"\":tile.minesClose);\n                    \n                    $(btn).css('background-color', \n                        self.determineButtonColor(tile.minesClose));\n                    \n                    if(tile.minesClose === 0) {\n                        self.clickSurrounding(x, y);\n                    }\n                    self.clicked++;\n                }\n                return;\n            case tileState.flagged:\n                return;\n            case tileState.exploded:\n                return;\n        }\n    };\n    \n    this.triggerAllMines = function() {\n        for(i = 0; i < self.boardSize.x; i++) {\n            for(j = 0; j < self.boardSize.y; j++) {\n                if(self.board[i][j].type == tileType.bomb \n                    && self.board[i][j].state != tileState.flagged) {\n                    $(self.board[i][j].btn)\n                        .css('background-color', btnColors.exploded);\n                }\n            }\n        }\n    };\n    \n    this.determineButtonColor = function(minesClose) {\n        var color = btnColors._0;\n        eval(\"color = btnColors._\" + minesClose);\n        return color;\n    };\n    \n    this.tryGet = function(x, y) {\n        x = parseInt(x);\n        y = parseInt(y);\n        if(x < 0 || x >= self.boardSize.x || y < 0 || y >= self.boardSize.y) {\n            return null;\n        }\n        return self.board[x][y];\n    };\n    \n    this.tryClick = function(x, y) {\n        var tile = this.tryGet(x,y);\n        if(!tile)\n            return;\n        self.click(x, y, tile.btn);\n    };\n    \n    this.tryClickUnclicked = function(x, y) {\n        var tile = this.tryGet(x,y);\n        jlog(\"TryClick: \" + x + \",\"+y+\": \");\n        if(!tile)\n            return;\n        if(tile.state != tileState.none)\n            return;\n        self.click(x, y, tile.btn);\n    };\n    \n    this.flag = function(x, y, btn) {\n        var tile = self.board[x][y];\n        if(tile.state == tileState.flagged) {\n            jlog(\"un-flagging: \" + x + \" \" + y);\n            tile.state = tileState.none;\n            $(btn).css('background-color', btnColors.none);\n            self.flags--;\n        }\n        else if(tile.state == tileState.none) {\n            tile.state = tileState.flagged;\n            jlog(\"flagging: \" + x + \" \" + y);\n            $(btn).css('background-color', btnColors.flag);\n            self.flags++;\n        }\n        self.setTitle();\n    };\n    \n    this.setTitle = function() {\n        document.title = \"JS: \" + self.flags + \"/\" + self.mines;\n    };\n    this.gameOver = function() {\n       \n        alert(\"GAME OVER!\");\n    };\n    \n    self.click = self.firstClick;\n    self.createEmptyBoard();\n} // class Board\n\nfunction Tile() {\n    this.type = tileType.free;\n    this.state = tileState.none;\n    this.minesClose = 0;\n}\n\nfunction buildTable(board) {\n    var table = $(\"#sveip_content\");\n    \n    for(var i = 0; i < board.boardSize.x; i++) {\n        var tr = $(\"<tr>\");\n        \n        for(var j = 0; j < board.boardSize.y; j++) {\n            var td = $(\"<td>\");\n            \n            var btn = $(\"<button>\").attr('x',i).attr('y',j)\n                .addClass(\"minebtn\").appendTo(td)\n                .css('background-color', btnColors.none);\n            $(td).appendTo(tr);\n            \n            board.board[i][j].btn = btn;\n        }\n        $(tr).appendTo(table);\n    }\n    \n    $(\".minebtn\").each(function(key, value) {\n        $(value).mouseup(function(event) {\n            jlog($(event.target).attr('x') + \" \" + $(event.target).attr('y'));\n            \n            if(!gameStarted) {\n                gameStarted = true;\n                jlog(\"Start\");\n            }\n            // Which mouse-button\n            // 1: leftclick\n            // 3: rightclick\n            switch(event.which) {\n                case 1:\n                    board.click($(event.target).attr('x'), \n                            $(event.target).attr('y'), event.target);\n                    // Check win\n                    if(board.clicked == (board.boardSize.x*board.boardSize.y)-board.mines) {\n                        board.onGameWon();\n                    }\n                    break;\n                case 3:\n                    board.flag($(event.target).attr('x'), $(event.target).attr('y'), event.target);\n                    break;\n            }\n            return true;\n        }).bind('contextmenu', function(e){ return false; })\n            .css('width', getTileSize())\n            .css('height', getTileSize())\n            .css('font-size', getTileSize()-4)\n            .css('font-weight', 'bold')\n            .hover(\n              function (event) {\n                $(this).addClass(\"minebtnHover\");\n                //board.select($(event.target).attr('x'), $(event.target).attr('y'));\n              },\n              function (event) {\n                $(this).removeClass(\"minebtnHover\");\n              }\n            );\n    });\n    /*\n    $(\"html\").keyup(function(event) {\n        switch(event.keyCode) {\n            case 38:\n                board.navigate(0, -1);\n                break;\n            case 39:\n                board.navigate(1, 0);\n                break;\n            case 40:\n                board.navigate(0, 1);\n                break;\n            case 37:\n                board.navigate(-1, 0);\n                break;\n            case 32:\n                board.clickSelected();\n                break;\n            case 96: case 70:\n                board.flagSelected();\n                break;\n        }\n    });\n    */\n}\n\nsetInterval(function() {\n   if(gameStarted) timer++; \n}, 1000);\n\nfunction getLevelFromText(txt) {\n    switch(txt) {\n        case \"easy\":\n            return 0;\n        case \"medium\":\n            return 1;\n        case \"hard\":\n            return 2;\n        case \"extreme\":\n            return 3;\n        default:\n            return 0;\n    }\n}\n\nvar boardSizeSet;\n\nfunction determineLevel() {\n    jlog(\"Fetching level parameters\");\n    var params = getQueryParams(document.location.search);\n    \n    var ts = params.tileSize;\n    if(!ts)\n        tileSize = defaultSettings.tileSize;\n    else\n        tileSize = ts;\n        \n    jlog(\"tile size: \" + tileSize);\n    \n    levelText = params.level;\n    if(!levelText)\n        level = 0;\n    else\n        level = getLevelFromText(levelText);\n    jlog(\"difficulty: \" + level);\n    \n    var sx = params.x;\n    var sy = params.y;\n    \n    if(!sx || !sy) {\n        boardSize = getBoardSize();\n        boardSizeSet = false;\n    }\n    else {\n        boardSize = { 'x': sy, 'y': sx };\n        boardSizeSet = true;\n    }\n    \n    jlog(\"board size: \" + boardSize.x + \" \" + boardSize.y);\n    jlog(\"done fetching level parameters\");\n}\n\nfunction getBoardSize() {\n    var y = Math.floor($(window).width() / getTileSize());\n    var x = Math.floor($(window).height() / getTileSize());\n    //x = 10;\n    //y = 10;\n    return { 'x': x, 'y': y };\n}\n\nfunction initGame() {\n    // Reset timer\n    timer = 0;\n    \n    $(\"#sveip_content\").empty();\n    var mines = Math.floor((boardSize.x * boardSize.y) / (3*(4-level)));\n    \n    board = new Board(boardSize, mines);\n    \n    board.onGameOver = function() {\n        gameStarted = false;\n        newGameDialog(\"Game Over\", \"Game over\");\n    };\n    \n    board.onGameWon = function() {\n        gameStarted = false;\n        newGameDialog(\"YAAAAY\", \"You did it in \" + timer + \" seconds!\");\n    };\n    \n    buildTable(board);\n}\n\nfunction newGameDialog(title, message) {\n    var msg = $(\"<p>\").text(message);\n    var div = $( \"<div>\" ).attr('title', title).html(msg).attr('id','dialog');\n     $(div).dialog(\n         {modal: true, buttons: \n            { 'New Game': function() {\n                $(div).dialog('close');\n                initGame();\n            }, 'Settings': function() {\n                $(div).dialog('close');\n                createUI();\n            }\n        }\n    });\n}\n\nfunction jlog(message) {\n    if(debug) {\n        console.log(message);\n    }\n}\n\nfunction getTileSize() {\n    return tileSize;\n}\n\nfunction createUI() {\n    $(\"select[name='level']\").val(levelText);\n    $(\"#tileSizeValue\").html(getTileSize());\n    \n    $(\"#slider\").slider({min: 10, max: 50, value: getTileSize(),\n        slide: function(event, ui) {\n            $(\"#tileSizeValue\").html(ui.value);\n            tileSize = ui.value;\n            boardSize = getBoardSize();\n            if(fill) {\n                var bs = getBoardSize();\n                $(\"#boardSizeContent\").html(\"X: \" + bs.x + \"<br/>Y: \" + bs.y);\n            }\n        }\n    });\n    \n    $(\"#boardType\").buttonset();\n    \n    if(!boardSizeCusom)\n        boardSizeCusom = $(\"#boardSizeCustom\");\n    \n    $(\"input[name=boardSize]\").on('change', function() {\n        if($(this).val() == 'Fill') {\n            var bs = getBoardSize();\n            $(\"#boardSizeContent\").html(\"X: \" + bs.x + \"<br/>Y: \" + bs.y);\n            fill = true;\n        } \n        else if($(this).val() == 'Custom') {\n            $(\"#boardSizeContent\").html(boardSizeCusom);\n            setupSpinners();\n            fill = false;\n        }\n    });\n    \n    $(\"#boardSizeContent\").html(boardSizeCusom);\n    \n    $(\"#settings\").dialog({modal: true, buttons: { Ok: function() {\n        level = getLevelFromText($(\"select[name='level']\").val());\n        if(fill) {\n            boardSize = getBoardSize();\n        } else {\n            var xVal = $(\"#inputBoardSizeY\").spinner('value');\n            var yVal = $(\"#inputBoardSizeX\").spinner('value');\n            boardSize = {x: xVal, y: yVal};\n        }\n        initGame();\n        board.setTitle();\n        $(this).dialog(\"close\");\n    }}});\n    \n    if(boardSizeSet) {\n        setupSpinners();\n        fill = false;\n    }else {\n        var bs = getBoardSize();\n        $(\"#boardSizeContent\").html(\"X: \" + bs.x + \"<br/>Y: \" + bs.y);\n        fill = true;\n    }\n}\n\nfunction setupSpinners() {\n    $(\"#inputBoardSizeX\").spinner().spinner('value', boardSize.y );\n    $(\"#inputBoardSizeY\").spinner().spinner('value', boardSize.x );\n}\n\n\nvar defaultBorders = {\n    none: \"solid 1px gray\",\n    hover: \"solid 1px red\"\n};"]],"start1":0,"start2":0,"length1":4074,"length2":18935}]],"length":18935,"saved":false}
{"ts":1372685798306,"patch":[[{"diffs":[[0,"'), "],[-1,"\n                            "],[0,"$(ev"]],"start1":12739,"start2":12739,"length1":37,"length2":8},{"diffs":[[0,"minebtnHover\");\n"],[1,"                console.log(event);\n"],[0,"                "]],"start1":13511,"start2":13511,"length1":32,"length2":68}]],"length":18942,"saved":false}
{"ts":1372685895571,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"board.se"]],"start1":13571,"start2":13571,"length1":18,"length2":16}]],"length":18940,"saved":false}
{"ts":1372685918716,"patch":[[{"diffs":[[0,"d.select"],[1,"Tile"],[0,"($(event"]],"start1":13583,"start2":13583,"length1":16,"length2":20}]],"length":18944,"saved":false}
{"ts":1372685940028,"patch":[[{"diffs":[[0,"s.select"],[1,"Tile"],[0," = funct"]],"start1":7096,"start2":7096,"length1":16,"length2":20}]],"length":18948,"saved":false}
{"ts":1372685991144,"patch":[[{"diffs":[[0,"y))."],[-1,"mouseleave("],[1,"css('border', defaultBorders.none"],[0,");\n "]],"start1":7184,"start2":7184,"length1":19,"length2":41}]],"length":18970,"saved":false}
{"ts":1372686003455,"patch":[[{"diffs":[[0,"y))."],[-1,"mouseenter("],[1,"css('border', defaultBorders.hover"],[0,");\n "]],"start1":7293,"start2":7293,"length1":19,"length2":42}]],"length":18993,"saved":false}
{"ts":1372686028547,"patch":[[{"diffs":[[0,"\");\n"],[-1,"                console.log(event);\n"],[0,"    "]],"start1":13572,"start2":13572,"length1":44,"length2":8}]],"length":18957,"saved":false}
{"ts":1372686032595,"patch":[[{"diffs":[[0,"    "],[-1,"/*"],[0,"\n   "]],"start1":13806,"start2":13806,"length1":10,"length2":8},{"diffs":[[0,"    "],[-1,"*/"],[0,"\n}\n\n"]],"start1":14403,"start2":14403,"length1":10,"length2":8}]],"length":18953,"saved":false}
{"ts":1372686113860,"patch":[[{"diffs":[[0,"f.select"],[1,"Tile"],[0,"(x, y);\n"]],"start1":7021,"start2":7021,"length1":16,"length2":20}]],"length":18957,"saved":false}
{"ts":1372686178799,"patch":[[{"diffs":[[0,"  case 3"],[-1,"8"],[1,"7"],[0,":\n      "]],"start1":13895,"start2":13895,"length1":17,"length2":17},{"diffs":[[0,"  case 3"],[-1,"9"],[1,"8"],[0,":\n      "]],"start1":13978,"start2":13978,"length1":17,"length2":17},{"diffs":[[0,"ase "],[-1,"40"],[1,"39"],[0,":\n  "]],"start1":14063,"start2":14063,"length1":10,"length2":10},{"diffs":[[0,"           case "],[-1,"37"],[1,"40"],[0,":\n              "]],"start1":14133,"start2":14133,"length1":34,"length2":34}]],"length":18957,"saved":false}
{"ts":1372686195519,"patch":[[{"diffs":[[0,"avigate("],[1,"-"],[0,"1, 0);\n "]],"start1":14012,"start2":14012,"length1":16,"length2":17},{"diffs":[[0," board.navigate("],[-1,"-"],[0,"1, 0);\n         "]],"start1":14169,"start2":14169,"length1":33,"length2":32}]],"length":18957,"saved":false}
{"ts":1372686244168,"patch":[[{"diffs":[[0,"ted.x, self.sele"],[1,"c"],[0,"ted.y));\n    };\n"]],"start1":6585,"start2":6585,"length1":32,"length2":33},{"diffs":[[0,"elf.sele"],[1,"c"],[0,"ted.y));"]],"start1":6749,"start2":6749,"length1":16,"length2":17}]],"length":18959,"saved":false}
{"ts":1372686287078,"patch":[[{"diffs":[[0,"f.board["],[-1,"x][y"],[1,"parseInt(x)][parseInt(y)"],[0,"].btn;  "]],"start1":6835,"start2":6835,"length1":20,"length2":40}]],"length":18979,"saved":false}
{"ts":1372686408193,"patch":[[{"diffs":[[0,"unction(x, y) {\n"],[1,"        console.log(x, y);\n"],[0,"        return s"]],"start1":6801,"start2":6801,"length1":32,"length2":59}]],"length":19006,"saved":false}
{"ts":1372686471270,"patch":[[{"diffs":[[0,"t.target).attr('"],[-1,"x"],[1,"y"],[0,"'), $(event.targ"]],"start1":13668,"start2":13668,"length1":33,"length2":33},{"diffs":[[0,"t.target).attr('"],[-1,"y"],[1,"x"],[0,"'));\n           "]],"start1":13695,"start2":13695,"length1":33,"length2":33}]],"length":19006,"saved":false}
{"ts":1372686551080,"patch":[[{"diffs":[[0,"le.log(x"],[-1,","],[1," + \" \" +"],[0," y);\n   "]],"start1":6830,"start2":6830,"length1":17,"length2":24}]],"length":19013,"saved":false}
{"ts":1372686638071,"patch":[[{"diffs":[[0,"       }\n    };\n"],[-1,"    \n"],[0,"    this.flagsSu"]],"start1":3706,"start2":3706,"length1":37,"length2":32},{"diffs":[[0,"unction(x, y) {\n"],[1,""],[0,"        var coun"]],"start1":3751,"start2":3751,"length1":32,"length2":32},{"diffs":[[0,"n count;\n    };\n"],[-1,"    \n"],[0,"    this.clickSu"]],"start1":4322,"start2":4322,"length1":37,"length2":32},{"diffs":[[0,"xp1,ym1);\n    };"],[-1,"\n  "],[0,"  \n    this.clic"]],"start1":4851,"start2":4851,"length1":35,"length2":32},{"diffs":[[0,"1,ym1);\n"],[1,""],[0,"    };"],[-1,"\n  "],[0,"  \n    t"]],"start1":5384,"start2":5384,"length1":25,"length2":22}]],"length":18997,"saved":false}
{"ts":1372686653239,"patch":[[{"diffs":[[0,"unction(x, y) {\n"],[1,"        if(self.selected)\n    "],[0,"        $(self.g"]],"start1":7156,"start2":7156,"length1":32,"length2":62}]],"length":19027,"saved":false}
{"ts":1372686695232,"patch":[[{"diffs":[[0,") {\n"],[-1,"        console.log(x + \" \" + y);\n"],[0,"    "]],"start1":6797,"start2":6797,"length1":42,"length2":8}]],"length":18993,"saved":false}
{"ts":1372686756280,"patch":[[{"diffs":[[0,"unction(x, y) {\n"],[1,"        if(self.selected)\n    "],[0,"        self.cli"]],"start1":6475,"start2":6475,"length1":32,"length2":62},{"diffs":[[0,"unction(x, y) {\n"],[1,"        if(self.selected)\n    "],[0,"        self.fla"]],"start1":6662,"start2":6662,"length1":32,"length2":62}]],"length":19053,"saved":false}
{"ts":1372686763396,"patch":[[{"diffs":[[0,"ed;\n    };\n    \n"],[1,"    self.selected = { x: 0, y: 0};\n    \n"],[0,"    this.isUncli"]],"start1":6193,"start2":6193,"length1":32,"length2":72},{"diffs":[[0,"    "],[-1,"self.selected = { x: 0, y: 0};"],[0,"\n   "]],"start1":7159,"start2":7159,"length1":38,"length2":8}]],"length":19063,"saved":false}
{"ts":1372686766022,"patch":[[{"diffs":[[0,"};\n    \n"],[-1,"    \n    \n"],[0,"    this"]],"start1":7151,"start2":7151,"length1":26,"length2":16}]],"length":19053,"saved":false}
{"ts":1372686822165,"patch":[[{"diffs":[[0,"rget).attr('"],[-1,"y"],[1,"x"],[0,"'), $(event."]],"start1":13719,"start2":13719,"length1":25,"length2":25},{"diffs":[[0,").attr('"],[-1,"x"],[1,"y"],[0,"'));\n   "]],"start1":13750,"start2":13750,"length1":17,"length2":17}]],"length":19053,"saved":false}
{"ts":1372687900027,"patch":[[{"diffs":[[0,"unction(x, y) {\n"],[1,"        if(!self.board[parseInt(x)][parseInt(y)])\n            console.log(x + \" \" + y);\n"],[0,"        return s"]],"start1":6885,"start2":6885,"length1":32,"length2":120}]],"length":19141,"saved":false}
{"ts":1372687964323,"patch":[[{"diffs":[[0,"ted.x + "],[-1,"x"],[1,"parseInt(x)"],[0,") % boar"]],"start1":7120,"start2":7120,"length1":17,"length2":27},{"diffs":[[0,"ted.y + "],[-1,"y"],[1,"parseInt(y)"],[0,") % boar"]],"start1":7179,"start2":7179,"length1":17,"length2":27}]],"length":19161,"saved":false}
{"ts":1372688080410,"patch":[[{"diffs":[[0,"ize.y;\n        \n"],[1,"        if(x < 0)\n            x = self.boardSize.x + x;\n        if(y < 0)\n            y = self.boardSize.y + y;\n        \n"],[0,"        self.sel"]],"start1":7208,"start2":7208,"length1":32,"length2":153}]],"length":19282,"saved":false}
{"ts":1372688169779,"patch":[[{"diffs":[[0,"t.target).attr('"],[-1,"x"],[1,"y"],[0,"'), $(event.targ"]],"start1":13944,"start2":13944,"length1":33,"length2":33},{"diffs":[[0,"t.target).attr('"],[-1,"y"],[1,"x"],[0,"'));\n           "]],"start1":13971,"start2":13971,"length1":33,"length2":33}]],"length":19282,"saved":false}
{"ts":1372688181260,"patch":[[{"diffs":[[0,"rget).attr('"],[-1,"y"],[1,"x"],[0,"'), $(event."]],"start1":13948,"start2":13948,"length1":25,"length2":25},{"diffs":[[0,").attr('"],[-1,"x"],[1,"y"],[0,"'));\n   "]],"start1":13979,"start2":13979,"length1":17,"length2":17}]],"length":19282,"saved":false}
{"ts":1372688547797,"patch":[[{"diffs":[[0,"ld')"],[-1,"\n            .hover(\n              function (event) {\n                $(this).addClass(\"minebtnHover\");\n                board.selectTile($(event.target).attr('x'), $(event.target).attr('y'));\n              },\n              function (event) {\n                $(this).removeClass(\"minebtnHover\");\n              }\n            );\n    });\n    \n    $(\"html\").keyup(function(event) {\n        switch(event.keyCode) {\n            case 37:\n                board.navigate(0, -1);\n                break;\n            case 38:\n                board.navigate(-1, 0);\n                break;\n            case 39:\n                board.navigate(0, 1);\n                break;\n            case 40:\n                board.navigate(1, 0);\n                break;\n            case 32:\n                board.clickSelected();\n                break;\n            case 96: case 70:\n                board.flagSelected();\n                break;\n        }\n    })"],[0,";\n    "],[1,"});\n"],[0,"\n}\n\n"]],"start1":13797,"start2":13797,"length1":943,"length2":18}]],"length":18357,"saved":false}
{"ts":1372688563107,"patch":[[{"diffs":[[0,"   \n"],[-1,"    this.clickSelected = function(x, y) {\n        if(self.selected)\n            self.click(self.selected.x, self.selected.y, self.getButton(self.selected.x, self.selected.y));\n    };\n    \n    this.flagSelected = function(x, y) {\n        if(self.selected)\n            self.flag(self.selected.x, self.selected.y, self.getButton(self.selected.x, self.selected.y));\n    };\n    \n    this.getButton = function(x, y) {\n        if(!self.board[parseInt(x)][parseInt(y)])\n            console.log(x + \" \" + y);\n        return self.board[parseInt(x)][parseInt(y)].btn;  \n    };\n    \n    this.navigate = function(x, y) {\n        x = (self.selected.x + parseInt(x)) % boardSize.x;\n        y = (self.selected.y + parseInt(y)) % boardSize.y;\n        \n        if(x < 0)\n            x = self.boardSize.x + x;\n        if(y < 0)\n            y = self.boardSize.y + y;\n        \n        self.selectTile(x, y);\n    };\n    \n"],[0,"    "]],"start1":6485,"start2":6485,"length1":907,"length2":8}]],"length":17458,"saved":false}
{"ts":1372688858497,"patch":[[{"diffs":[[0,"f.mines;\n    };\n"],[1,"    \n"],[0,"    this.gameOve"]],"start1":10871,"start2":10871,"length1":32,"length2":37}]],"length":17463,"saved":false}
{"ts":1372688869186,"patch":[[{"diffs":[[0,"oard();\n"],[1,"    self.setTitle();\n"],[0,"} // cla"]],"start1":11029,"start2":11029,"length1":16,"length2":37}]],"length":17484,"saved":false}
{"ts":1372688909232,"patch":[[{"diffs":[[0,"es;\n    };\n    \n"],[1,"    this.getButton = function(x, y) {\n        return self.board[x][y].tile;  \n    };\n    \n"],[0,"    this.gameOve"]],"start1":10876,"start2":10876,"length1":32,"length2":122}]],"length":17574,"saved":false}
{"ts":1372688920902,"patch":[[{"diffs":[[0,";\n            $("],[1,"tile."],[0,"btn).css('backgr"]],"start1":10413,"start2":10413,"length1":32,"length2":37}]],"length":17579,"saved":false}
{"ts":1372688927224,"patch":[[{"diffs":[[0,";\n            $("],[1,"tile."],[0,"btn).css('backgr"]],"start1":10652,"start2":10652,"length1":32,"length2":37}]],"length":17584,"saved":false}
{"ts":1372688950480,"patch":[[{"diffs":[[0," = function(x, y"],[-1,", btn"],[0,") {\n        var "]],"start1":10217,"start2":10217,"length1":37,"length2":32}]],"length":17579,"saved":false}
{"ts":1372688965017,"patch":[[{"diffs":[[0,"t).attr('y')"],[-1,", event.target"],[0,");\n         "]],"start1":12698,"start2":12698,"length1":38,"length2":24}]],"length":17565,"saved":false}
{"ts":1372689007522,"patch":[[{"diffs":[[0,"'y')"],[-1,", event.target"],[0,");\n "]],"start1":12364,"start2":12364,"length1":22,"length2":8}]],"length":17551,"saved":false}
{"ts":1372689037052,"patch":[[{"diffs":[[0,"unction(x, y"],[-1,", btn) {"],[1,") {\n        "],[0,"\n        x ="]],"start1":6799,"start2":6799,"length1":32,"length2":36},{"diffs":[[0,"Int(y);\n        "],[1,"var btn = self.getButton(x,y);"],[0,"\n        var avo"]],"start1":6866,"start2":6866,"length1":32,"length2":62}]],"length":17585,"saved":false}
{"ts":1372689039059,"patch":[[{"diffs":[[0,"utton(x,y);\n"],[1,"        \n"],[0,"        var "]],"start1":6901,"start2":6901,"length1":24,"length2":33}]],"length":17594,"saved":false}
{"ts":1372689072915,"patch":[[{"diffs":[[0,"ion(x, y"],[-1,", btn"],[0,") {\n    "]],"start1":7407,"start2":7407,"length1":21,"length2":16},{"diffs":[[0,"              $("],[1,"tile."],[0,"btn).css('disabl"]],"start1":8329,"start2":8329,"length1":32,"length2":37},{"diffs":[[0,"', true)"],[-1,";"],[0,"\n"],[1,"   "],[0,"        "]],"start1":8368,"start2":8368,"length1":18,"length2":20},{"diffs":[[0,"        "],[-1,"$(btn)"],[1," "],[0,".text(ti"]],"start1":8392,"start2":8392,"length1":22,"length2":17},{"diffs":[[0,"tile.minesClose)"],[-1,";"],[0,"\n               "]],"start1":8430,"start2":8430,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"\n               "],[0,"    "],[-1," $(btn)"],[0,".css"]],"start1":8463,"start2":8463,"length1":35,"length2":12},{"diffs":[[0,"r', "],[-1,"\n                        "],[0,"self"]],"start1":8492,"start2":8492,"length1":33,"length2":8}]],"length":17542,"saved":false}
{"ts":1372689101368,"patch":[[{"diffs":[[0,"ed:\n"],[-1,"                return;\n"],[0,"    "]],"start1":8795,"start2":8795,"length1":32,"length2":8}]],"length":17518,"saved":false}
{"ts":1372689129925,"patch":[[{"diffs":[[0,"ion() {\n"],[-1,"       \n"],[0,"        "]],"start1":10979,"start2":10979,"length1":24,"length2":16}]],"length":17510,"saved":false}
{"ts":1372689137195,"patch":[[{"diffs":[[0,"Title();\n    };\n"],[-1,"    \n"],[0,"    this.setTitl"]],"start1":10733,"start2":10733,"length1":37,"length2":32},{"diffs":[[0,"f.mines;\n    };\n"],[-1,"    \n"],[0,"    this.getButt"]],"start1":10838,"start2":10838,"length1":37,"length2":32},{"diffs":[[0,".tile;  \n    };\n"],[-1,"    \n"],[0,"    this.gameOve"]],"start1":10923,"start2":10923,"length1":37,"length2":32}]],"length":17495,"saved":false}
{"ts":1372689140716,"patch":[[{"diffs":[[0,"x );\n}\n\n"],[-1,"\n"],[0,"var defa"]],"start1":17406,"start2":17406,"length1":17,"length2":16}]],"length":17494,"saved":false}
{"ts":1372689143143,"patch":[[{"diffs":[[0,");\n}"],[-1,"\n\nvar defaultBorders = {\n    none: \"solid 1px gray\",\n    hover: \"solid 1px red\"\n};"]],"start1":17408,"start2":17408,"length1":86,"length2":4}]],"length":17412,"saved":false}
{"ts":1372689155014,"patch":[[{"diffs":[[0,"= true;\n    }\n}\n"],[-1,"\n"],[0,"function setupSp"]],"start1":17231,"start2":17231,"length1":33,"length2":32}]],"length":17411,"saved":false}
{"ts":1372689175299,"patch":[[{"diffs":[[0,"    }\n}\n"],[-1,"\n"],[0,"var boar"]],"start1":13285,"start2":13285,"length1":17,"length2":16},{"diffs":[[0,"izeSet;\n"],[-1,"\n"],[0,"function"]],"start1":13303,"start2":13303,"length1":17,"length2":16},{"diffs":[[0,"meters\");\n}\n"],[-1,"\n"],[0,"function get"]],"start1":14103,"start2":14103,"length1":25,"length2":24},{"diffs":[[0,"'y': y };\n}\n"],[-1,"\n"],[0,"function ini"]],"start1":14309,"start2":14309,"length1":25,"length2":24},{"diffs":[[0,"e(board);\n}\n"],[-1,"\n"],[0,"function new"]],"start1":14827,"start2":14827,"length1":25,"length2":24},{"diffs":[[0,"}\n    });\n}\n"],[-1,"\n"],[0,"function jlo"]],"start1":15287,"start2":15287,"length1":25,"length2":24},{"diffs":[[0,"    }\n}\n"],[-1,"\n"],[0,"function"]],"start1":15370,"start2":15370,"length1":17,"length2":16},{"diffs":[[0,"leSize;\n"],[1,""],[0,"}\n"],[-1,"\n"],[0,"function"]],"start1":15416,"start2":15416,"length1":19,"length2":18}]],"length":17403,"saved":false}
{"ts":1372689180279,"patch":[[{"diffs":[[0,"    });\n"],[-1,"\n}\n"],[1,"}"],[0,"\nsetInte"]],"start1":12941,"start2":12941,"length1":19,"length2":17}]],"length":17401,"saved":false}
{"ts":1372689187723,"patch":[[{"diffs":[[0,"ble);\n    }\n"],[-1,"    \n"],[0,"    $(\".mine"]],"start1":11769,"start2":11769,"length1":29,"length2":24}]],"length":17396,"saved":false}
{"ts":1372689202417,"patch":[[{"diffs":[[0,"  }\n"],[-1,"            // Which mouse-button\n            // 1: leftclick\n            // 3: rightclick\n"],[0,"    "]],"start1":12070,"start2":12070,"length1":99,"length2":8}]],"length":17305,"saved":false}
{"ts":1372689208616,"patch":[[{"diffs":[[0,");\n            }"],[1," "],[0,"\n            swi"]],"start1":12057,"start2":12057,"length1":32,"length2":33},{"diffs":[[0," case 1:"],[1," "],[0,"\n       "]],"start1":12124,"start2":12124,"length1":16,"length2":17}]],"length":17307,"saved":false}
{"ts":1372689218571,"patch":[[{"diffs":[[0,"case 1: "],[1,"// Left click"],[0,"\n       "]],"start1":12125,"start2":12125,"length1":16,"length2":29},{"diffs":[[0," case 3:"],[1," // RightClick"],[0,"\n       "]],"start1":12467,"start2":12467,"length1":16,"length2":30}]],"length":17334,"saved":false}
{"ts":1372689293041,"patch":[[{"diffs":[[0," btnColors.none)"],[-1,";"],[0,"\n            $(t"]],"start1":11630,"start2":11630,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"$(td).appendTo(tr);\n            \n            board.board[i][j].btn = btn;\n        }\n        $(tr).appendTo(table);\n    }\n    $(\".minebtn\").each(function(key, value) {\n        $(value).mouseup(function(event) {\n"],[1,"    .mouseup(function(event) {\n        "],[0,"    "]],"start1":11655,"start2":11655,"length1":218,"length2":47},{"diffs":[[0,"));\n            "],[-1,"\n"],[1,"        \n    "],[0,"            if(!"]],"start1":11773,"start2":11773,"length1":33,"length2":45},{"diffs":[[0,"            "],[1,"    "],[0,"if(!gameStar"]],"start1":11802,"start2":11802,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"     "],[1,"   "],[0,"gameStarted = tr"]],"start1":11837,"start2":11837,"length1":32,"length2":40},{"diffs":[[0,"            "],[1,"      "],[1,"  "],[0,"jlog(\"Start\""]],"start1":11885,"start2":11885,"length1":24,"length2":32},{"diffs":[[0,"\");\n            "],[-1,"} \n"],[1,"        } \n        "],[0,"            swit"]],"start1":11916,"start2":11916,"length1":35,"length2":51},{"diffs":[[0,"            "],[1,"        "],[0,"case 1: // L"]],"start1":11989,"start2":11989,"length1":24,"length2":32},{"diffs":[[0," Left click\n"],[1,"        "],[0,"            "]],"start1":12019,"start2":12019,"length1":24,"length2":32},{"diffs":[[0,"        "],[1,"  "],[1,"      "],[0,"// Check"]],"start1":12138,"start2":12138,"length1":16,"length2":24},{"diffs":[[0,"eck win\n"],[1,"        "],[0,"        "]],"start1":12159,"start2":12159,"length1":16,"length2":24},{"diffs":[[0,"            "],[1,"        "],[0,"board.onGame"]],"start1":12280,"start2":12280,"length1":24,"length2":32},{"diffs":[[0,"                "],[-1,"}\n"],[1,"        }\n     "],[0,"                "]],"start1":12323,"start2":12323,"length1":34,"length2":47},{"diffs":[[0,"                "],[1,"   "],[0,"break;\n"],[1,"        "],[0,"                "]],"start1":12358,"start2":12358,"length1":39,"length2":50},{"diffs":[[0," RightClick\n"],[1,"        "],[0,"            "]],"start1":12418,"start2":12418,"length1":24,"length2":32},{"diffs":[[0,"                "],[1,"        "],[0,"break;\n         "]],"start1":12528,"start2":12528,"length1":32,"length2":40},{"diffs":[[0,"ak;\n            "],[1,"        "],[0,"}\n            re"]],"start1":12555,"start2":12555,"length1":32,"length2":40},{"diffs":[[0,"  }\n            "],[1," "],[1,"       "],[0,"return true;\n   "]],"start1":12577,"start2":12577,"length1":32,"length2":40},{"diffs":[[0,"eturn true;\n"],[1,"        "],[0,"        }).b"]],"start1":12602,"start2":12602,"length1":24,"length2":32},{"diffs":[[0,"            "],[1,"   "],[1,"     "],[0,".css('width'"]],"start1":12683,"start2":12683,"length1":24,"length2":32},{"diffs":[[0,"            "],[1,"    "],[1,"    "],[0,".css('height"]],"start1":12732,"start2":12732,"length1":24,"length2":32},{"diffs":[[0,"())\n            "],[1,"     "],[1,"   "],[0,".css('font-size'"]],"start1":12778,"start2":12778,"length1":32,"length2":40},{"diffs":[[0,"-4)\n            "],[1,"        "],[0,".css('font-weigh"]],"start1":12833,"start2":12833,"length1":32,"length2":40},{"diffs":[[0,"', 'bold');\n"],[1,"                    $(td).appendTo(tr);\n            \n            board.board[i][j].btn = btn;\n        }\n        $(tr).appendTo(table);\n    }\n    $(\".minebtn\").each(function(key, value) {\n        $(value)\n"],[0,"    });\n}\nse"]],"start1":12874,"start2":12874,"length1":24,"length2":228}]],"length":17550,"saved":false}
{"ts":1372691109309,"patch":[[{"diffs":[[0,"  })"],[-1,".bind('contextmenu', function(e){ return false; })\n                    .css('width', getTileSize())\n                    .css('height', getTileSize())\n                    .css('font-size', getTileSize()-4)\n                    .css('font-weight', 'bold')"],[0,";\n  "]],"start1":12628,"start2":12628,"length1":260,"length2":8}]],"length":17298,"saved":false}
{"ts":1372691110834,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[0,"$(td).ap"]],"start1":12642,"start2":12642,"length1":20,"length2":16}]],"length":17294,"saved":false}
{"ts":1372691119721,"patch":[[{"diffs":[[0,"n\")."],[-1,"each(function(key, value) {\n        $(value)\n    }"],[1,"bind('contextmenu', function(e){ return false; })\n        .css('width', getTileSize())\n        .css('height', getTileSize())\n        .css('font-size', getTileSize()-4)\n        .css('font-weight', 'bold'"],[0,");\n}"]],"start1":12785,"start2":12785,"length1":58,"length2":210}]],"length":17446,"saved":false}
